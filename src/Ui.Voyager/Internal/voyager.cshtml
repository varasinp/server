<!DOCTYPE html>
<html>
<head>
  <style>
    body {
      height: 100%;
      margin: 0;
      width: 100%;
      overflow: hidden;
    }

    #voyager {
      height: 100vh;
    }
  </style>

  <script src="../es6-promise.auto.min.js"></script>
  <script src="../fetch.min.js"></script>
  <script src="../react.production.min.js"></script>
  <script src="../react-dom.production.min.js"></script>

  <link rel="stylesheet" type="text/css" href="../voyager.css" />
  <script src="../voyager.min.js"></script>
</head>
<body>
  <div id="voyager">Loading...</div>
  <script>

      // Defines a GraphQL introspection fetcher using the fetch API. You're not required to
      // use fetch, and could instead implement introspectionProvider however you like,
      // as long as it returns a Promise
      // Voyager passes introspectionQuery as an argument for this function
      function introspectionProvider(introspectionQuery) {
        return fetch(window.location.protocol + "//" + window.location.host + "@Model.GraphQLEndPoint", {
          method: 'post',
          headers: @Model.Headers,
          body: JSON.stringify({query: introspectionQuery}),
          credentials: 'include',
        }).then(function (response) {
          return response.text();
        }).then(function (responseBody) {
          try {
            return JSON.parse(responseBody);
          } catch (error) {
            return responseBody;
          }
        });
      }

      // Render <Voyager /> into the body.
      GraphQLVoyager.init(document.getElementById('voyager'), {
        introspection: introspectionProvider
      });
  </script>
</body>
</html>
